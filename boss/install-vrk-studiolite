#!/bin/sh
#inkVerbBoss! verb.ink

# This installs a "lite" version of Ubuntu Studio
## This is automatically run by: install-vrk
## Prerequesite: Vrkâ„¢ must be installed

# How to use:
## sudo install-vrk-studiolite


# Set user
VRK_USER=${SUDO_USER}

# Check if Vrk installed on this machine
if [ ! -f /opt/vrk/machineinfo ]; then
echo "Install Vrk on this machine first. See README.md"
exit 22; fi

# Check if installed
if [ ! -f /home/${VRK_USER}/.vrk/configs/stationinfo ]; then
echo "Install Vrk first. See README.md"
exit 22; fi

# Check for Vrk Desktop (which installs yay)
. /opt/vrk/machineinfo
if [ ! -e "/opt/vrk/.vrk-desktop-installed" ] || [ -z "$VRK_DESKTOP_INSTALLED" ] || [ "$VRK_DESKTOP_INSTALLED" != "YES" ]; then
echo "must run install-vrk-desktop first"
exit 22; fi

# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(/usr/bin/id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo install-vrk-studiolite
"
exit 22; fi; fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo install-vrk-studiolite
"
exit 22; fi

# Check if Vrk StudioLite installed
if [ -f /opt/vrk/.vrk-studiolite-installed ]; then
echo "Vrk StudioLite already installed on this machine."
exit 0; fi

# Check for Internet connection
/usr/bin/ping -c 1 -q google.com > /dev/null 2>&1
if [ "$?" != "0" ]; then
echo "No Internet connection. Connect, then try again."; exit 0; fi

# Include the configs
. /home/${SUDO_USER}/.vrk/configs/lang/stationuser-dirs_CURRENT

# Update
/usr/bin/pacman -Sy archlinux-keyring --noconfirm
/usr/bin/pacman -Syy --noconfirm
/usr/bin/pacman -Scc --noconfirm
/usr/bin/su worker -c '/usr/bin/yay -Syy --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Scc --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Yc --noconfirm'

# Message
echo "
Installing Vrk StudioLite...
"
sleep 1

# Graphic Design CLI & CPU "Performance" Scaling Governor
## We need the CPU working at "Performance" since this is a studio machine
chkfile=/opt/vrk/.inst-stult-1
if [ ! -f "$chkfile" ]; then
echo "
#######
Graphic Design CLI & CPU \"Performance\" Scaling Governor
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed imagemagick
/usr/bin/pacman -S --noconfirm --needed pandoc
/usr/bin/pacman -S --noconfirm --needed synfig
/usr/bin/pacman -S --noconfirm --needed ffmpeg
/usr/bin/cpupower frequency-set -g performance
/usr/bin/touch $chkfile; fi

# Graphic Design GUI
chkfile=/opt/vrk/.inst-stult-2
if [ ! -f "$chkfile" ]; then
echo "
#######
Graphic Design GUI
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed gimp
/usr/bin/pacman -S --noconfirm --needed inkscape
/usr/bin/pacman -S --noconfirm --needed mypaint
/usr/bin/pacman -S --noconfirm --needed krita
#/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm gimp-plugin-registry' # broken
## CMYK for inkscape
#/opt/vrk/boss/install-pdfcmyk #needs to be installed separately
/usr/bin/touch $chkfile; fi

# Video Making
chkfile=/opt/vrk/.inst-stult-3
if [ ! -f "$chkfile" ]; then
echo "
#######
Video Making
#######
"
sleep 1
## AMD or Nvidia?
### Test if AMD shows up in the graphics info
if /usr/bin/lspci | /usr/bin/grep -i --color 'vga\|3d\|2d' | /usr/bin/grep -q AMD; then
  /usr/bin/su worker -c '/usr/bin/yay -S obs-studio-amf --noconfirm'
else
  /usr/bin/pacman -S --noconfirm --needed obs-studio
fi
/usr/bin/pacman -S --noconfirm --needed shotcut
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm key-mon'
/usr/bin/touch $chkfile; fi

# Audacity + Audio Support: ALSA & RealTime User
chkfile=/opt/vrk/.inst-stult-4
if [ ! -f "$chkfile" ]; then
echo "
#######
Audacity + Audio Support: ALSA & RealTime User
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed audacity
/usr/bin/pacman -S --noconfirm --needed alsa-lib gcc-libs libx11
# Realtime privileges
/usr/bin/pacman -S --noconfirm --needed realtime-privileges
for vuser in /home/*; do
  vuser=$(/usr/bin/basename $vuser)
  /usr/bin/usermod $vuser -a -G realtime
done
# Audio security limits (https://wiki.linuxaudio.org/wiki/system_configuration#limitsconfaudioconf)
if [ ! -f "/etc/security/limits.d/audio.conf" ] || ! grep -qE "^[^#]+(rtprio).*$" /etc/security/limits.conf; then
  /usr/bin/cat <<EOF > /etc/security/limits.d/audio.conf
@audio - rtprio 90       # maximum realtime priority
@audio - memlock unlimited  # maximum locked-in-memory address space (KB)
EOF
fi

/usr/bin/touch $chkfile; fi

# Earth & Star Charts
chkfile=/opt/vrk/.inst-stult-5
if [ ! -f "$chkfile" ]; then
echo "
#######
Earth & Star Charts
#######
"
sleep 1
##Dev stellarium retrieves dependencies directly while stellarium-bin bases everything on the AppImage from the vendor
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm stellarium-bin'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm google-earth-pro'
/usr/bin/touch $chkfile; fi

# RSS
chkfile=/opt/vrk/.inst-stult-6
if [ ! -f "$chkfile" ]; then
echo "
#######
Really Slick Screensavers
#######
"
sleep 1
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm rss-glx'
killall xscreensaver > /dev/null 2>&1
/usr/bin/rss-glx_install.pl # installs more screensavers, including Helios
/usr/bin/touch $chkfile; fi

# Remove every $chkfile
rm /opt/vrk/.inst-stult-*

# Set config
if [ "${VRK_STUDIOLITE_INSTALLED}" != "YES" ]; then
sed -i "s/VRK_STUDIOLITE_INSTALLED=.*/VRK_STUDIOLITE_INSTALLED=\"YES\"/" /opt/vrk/machineinfo; fi
if [ -z "${VRK_STUDIOLITE_INSTALLED}" ]; then
echo "VRK_STUDIOLITE_INSTALLED=\"YES\"" >> /opt/vrk/machineinfo; fi
/usr/bin/touch /opt/vrk/.vrk-studiolite-installed

# Cleanup
/usr/bin/pacman -Rsc --noconfirm
/usr/bin/pacman -Scc --noconfirm
/usr/bin/su worker -c '/usr/bin/yay -Scc --sudoflags "-A" --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Yc --noconfirm'

# Finish
echo "
Vrk Studio Lite is all set.
"
