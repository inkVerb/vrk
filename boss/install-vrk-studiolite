#!/bin/sh
#inkVerbBoss! verb.ink

# This installs a "lite" version of Ubuntu Studio
## This is automatically run by: install-vrk
## Prerequesite: Vrkâ„¢ must be installed

# How to use:
## sudo install-vrk-studiolite


# Set user
VRK_USER=${SUDO_USER}

# Check if Vrk installed on this machine
if [ ! -f /opt/vrk/machineinfo ]; then
echo "Install Vrk on this machine first. See README.md"
exit 22; fi

# Check if installed
if [ ! -f /home/${VRK_USER}/.vrk/configs/stationinfo ]; then
echo "Install Vrk first. See README.md"
exit 22; fi

# Check for Vrk Desktop (which installs yay)
. /opt/vrk/machineinfo
if [ ! -e "/opt/vrk/.vrk-desktop-installed" ] || [ -z "$VRK_DESKTOP_INSTALLED" ] || [ "$VRK_DESKTOP_INSTALLED" != "YES" ]; then
echo "must run install-vrk-desktop first"
exit 22; fi

# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo install-vrk-studiolite
"
exit 22; fi; fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo install-vrk-studiolite
"
exit 22; fi

# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo install-vrk-apps
"
exit 22; fi; fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo install-vrk-apps
"
exit 22; fi

# Check for Internet connection
/usr/bin/ping -c 1 -q google.com > /dev/null 2>&1
if [ "$?" != "0" ]; then
echo "No Internet connection. Connect, then try again."; exit 0; fi

# Include the configs
. /home/${SUDO_USER}/.vrk/configs/lang/stationuser-dirs_CURRENT

# Update
/usr/bin/pacman -Sy archlinux-keyring --noconfirm
/usr/bin/pacman -Syy --noconfirm
/usr/bin/pacman -Scc --noconfirm
/usr/bin/su worker -c '/usr/bin/yay -Syy --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Scc --noconfirm'

# Message
echo "
Installing Vrk StudioLite...
"
sleep 1

# Terminal Design Tools
chkfile=/opt/vrk/.inst-stult-1
if [ ! -f "$chkfile" ]; then
echo "
#######
Terminal Design Tools
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed imagemagick
/usr/bin/pacman -S --noconfirm --needed pandoc
/usr/bin/pacman -S --noconfirm --needed synfig
/usr/bin/pacman -S --noconfirm --needed ffmpeg
touch $chkfile; fi

# Graphic Design
chkfile=/opt/vrk/.inst-stult-2
if [ ! -f "$chkfile" ]; then
echo "
#######
Graphic Design
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed gimp
/usr/bin/pacman -S --noconfirm --needed inkscape
/usr/bin/pacman -S --noconfirm --needed mypaint
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm gimp-plugin-registry'
## CMYK for inkscape
/opt/vrk/boss/install-pdfcmyk
touch $chkfile; fi

# Video Making
chkfile=/opt/vrk/.inst-stult-3
if [ ! -f "$chkfile" ]; then
echo "
#######
Video Making
#######
"
sleep 1
## AMD or Nvidia?
### Test if AMD shows up in the graphics info
if /usr/bin/lspci | /usr/bin/grep -i --color 'vga\|3d\|2d' | /usr/bin/grep -q AMD; then
  /usr/bin/su worker -c '/usr/bin/yay -S obs-studio-amf --noconfirm'
else
  /usr/bin/pacman -S --noconfirm --needed obs-studio
fi
/usr/bin/pacman -S --noconfirm --needed shotcut
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm key-mon'
touch $chkfile; fi

# Audacity
chkfile=/opt/vrk/.inst-stult-4
if [ ! -f "$chkfile" ]; then
echo "
#######
Audacity
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed audacity
touch $chkfile; fi

# Earth & Star Charts
chkfile=/opt/vrk/.inst-stult-5
if [ ! -f "$chkfile" ]; then
echo "
#######
Earth & Star Charts
#######
"
sleep 1
##Dev stellarium retrieves dependencies directly while stellarium-bin bases everything on the AppImage from the vendor
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm stellarium-bin'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm google-earth-pro'
touch $chkfile; fi

# RSS
chkfile=/opt/vrk/.inst-stult-6
if [ ! -f "$chkfile" ]; then
echo "
#######
Really Slick Screensavers
#######
"
sleep 1
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm rss-glx'
killall xscreensaver > /dev/null 2>&1
/usr/bin/rss-glx_install.pl # installs more screensavers, including Helios
touch $chkfile; fi

# Remove every $chkfile
rm /opt/vrk/.inst-stult-*

# Set config
if [ "${VRK_STUDIOLITE_INSTALLED}" != "YES" ]; then
sed -i "s/VRK_STUDIOLITE_INSTALLED=.*/VRK_STUDIOLITE_INSTALLED=\"YES\"/" /opt/vrk/machineinfo; fi
if [ -z "${VRK_STUDIOLITE_INSTALLED}" ]; then
echo "VRK_STUDIOLITE_INSTALLED=\"YES\"" >> /opt/vrk/machineinfo; fi
touch /home/${SUDO_USER}/.vrk/configs/.studiolite
## Remove repo temp progress files
rm -f /opt/vrk/.vrk-studiolite-*

# Cleanup
/usr/bin/pacman -Qdt --noconfirm
/usr/bin/pacman -Scc --noconfirm
/usr/bin/su worker -c '/usr/bin/yay -Scc --sudoflags "-A" --noconfirm'

# Finish
echo "
Vrk Studio Lite is all set.
"
