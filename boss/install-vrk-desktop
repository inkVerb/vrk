#!/bin/sh
#inkVerbBoss! verb.ink

# This installs Vrk Desktop apps and wallpaper
## Prerequesite: Vrkâ„¢ must be installed

# How to use:
## sudo install-vrk-desktop

# Eg: (re-install for specific desktop)
## sudo install-vrk-desktop $DESKTOP_SESSION


# Set user
VRK_USER=${SUDO_USER}

# Check if Vrk installed on this machine
if [ ! -f /opt/vrk/machineinfo ]; then
echo "Install Vrk on this machine first. See README.md"
exit 22; fi

# Include the config
. /opt/vrk/machineinfo

# Check if installed
if [ ! -f /home/${VRK_USER}/.vrk/configs/stationinfo ]; then
echo "Install Vrk first. See README.md"
exit 22; fi

# Check to make sure this is run as sudo, but not run by root
## If root or sudo
if [ "$(id -u)" = "0" ]; then
## If sudo is NOT present
 if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not as root. You'll have to exit root and perhaps re-login as the sudoer. Then...
like this:
sudo install-vrk-desktop
"
exit 22; fi; fi
## If sudo is NOT present
if [ -z "${SUDO_COMMAND}" ]; then
echo "Run this as a sudoer sudo, not merely as a sudoer.
like this:
sudo install-vrk-desktop
"
exit 22; fi

# Check if Vrk Desktop installed (again)
if [ -f /opt/vrk/.vrk-desktop-installed ]; then
echo "Vrk Desktop already installed on this machine."
exit 0; fi

# Message
echo "
Installing Vrk Desktop...
"
sleep 1

# Check for Internet connection
/usr/bin/ping -c 1 -q google.com > /dev/null 2>&1
if [ "$?" != "0" ]; then
echo "No Internet connection. Connect, then try again."; exit 0; fi

# Global

# Update & Upgrade
# Message
echo "
#######
Updates
#######
"
/usr/bin/pacman -Sy archlinux-keyring --noconfirm
/usr/bin/pacman -Syyu --noconfirm
/usr/bin/pacman -Scc --noconfirm

# Basics
chkfile=/opt/vrk/.inst-dsktp-0
if [ ! -f "$chkfile" ]; then
echo "
#######
AUR Yay!
#######
"
sleep 1
## BASH prompt colors
chsh -s /bin/bash
cp /root/.bashrc /root/.bashrc-vrkbak
sed -i "s:\\\W:\\\[\\\033[01;34m\\\]\\\w:g" /etc/skel/.bashrc
sed -i "s:\\\W:\\\[\\\033[01;34m\\\]\\\w:g" /root/.bashrc
## Dependencies
/usr/bin/pacman -S --noconfirm --needed base-devel git which pwgen



# AUR manager
## worker user
if /usr/bin/su worker -c 'echo hello' > /dev/null 2>&1 && /usr/bin/ls /opt/vrk/worker > /dev/null 2>&1; then
  echo "worker user exists, moving on..."
else
  ### Create worker user
  /usr/bin/groupadd worker
  /usr/bin/useradd -g worker worker
  /usr/bin/usermod -a -G wheel worker
  /usr/bin/mkdir -p /opt/vrk/worker
  /usr/bin/chown -R worker:worker /opt/vrk/worker
  /usr/bin/usermod -d /opt/vrk/worker worker
  /usr/bin/echo 'worker ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/worker

  ### Let's use sudo
  /usr/bin/groupadd sudo
  /usr/bin/sed -i "s?# %sudo\tALL=(ALL) ALL?%sudo\tALL=(ALL) ALL?" /etc/sudoers

fi
## yay AUR manager
if which yay > /dev/null 2>&1; then
  echo "yay already installed, moving on..."
else
  ## Install AUR manager
  cd /opt/vrk/worker || exit 0
  /usr/bin/su worker -c '/usr/bin/git clone https://aur.archlinux.org/yay.git'
  cd yay || exit 0
  /usr/bin/su worker -c '/usr/bin/makepkg -si --noconfirm'
  cd .. || exit 0
  /usr/bin/rm -rf yay
fi
## Let's use the yeo helper
/usr/bin/ln -sfn /opt/vrk/donjon/yeo.sh /usr/local/bin/yeo

## Update yay
/usr/bin/su worker -c '/usr/bin/yay -Syyu --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Scc --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Yc --noconfirm'
touch $chkfile; fi

# Fonts
chkfile=/opt/vrk/.inst-dsktp-1
if [ ! -f "$chkfile" ]; then
echo "
#######
Fonts
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed tex-gyre-fonts
/usr/bin/pacman -S --noconfirm --needed ttf-cascadia-code ttf-anonymous-pro ttf-jetbrains-mono
/usr/bin/pacman -S --noconfirm --needed ttf-ubuntu-font-family ttf-ibm-plex ttf-linux-libertine ttf-liberation gnu-free-fonts
/usr/bin/pacman -S --noconfirm --needed gentium-plus-font ttf-dejavu ttf-junicode ttf-droid noto-fonts
/usr/bin/pacman -S --noconfirm --needed adobe-source-han-sans-otc-fonts adobe-source-han-serif-otc-fonts adobe-source-sans-pro-fonts
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-mgopen culmus'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm font-bh-ttf'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-courier-prime'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-ms-fonts'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-vista-fonts'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-google-fonts-git'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ebgaramond-otf otf-bodoni '
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm otf-jost'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm ttf-tahoma'
touch $chkfile; fi

# Browsers, Thunderbird
chkfile=/opt/vrk/.inst-dsktp-2
if [ ! -f "$chkfile" ]; then
echo "
#######
Browsers & Email
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed chromium firefox thunderbird
/usr/bin/pacman -S --noconfirm --needed vivaldi vivaldi-ffmpeg-codecs
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm google-chrome'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm microsoft-edge-stable-bin'
touch $chkfile; fi

# Desktop Gestures
chkfile=/opt/vrk/.inst-dsktp-3
if [ ! -f "$chkfile" ]; then
echo "
#######
Wallpaper
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed touchegg
/usr/bin/systemctl enable touchegg.service
touch $chkfile; fi

# LibreOffice & OnlyOffice
chkfile=/opt/vrk/.inst-dsktp-4
if [ ! -f "$chkfile" ]; then
echo "
#######
Office
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed libreoffice
/usr/bin/pacman -S --noconfirm --needed onlyoffice
touch $chkfile; fi

# Terminal & text tools
chkfile=/opt/vrk/.inst-dsktp-5
if [ ! -f "$chkfile" ]; then
echo "
#######
Terminal & Text
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed htop ntp gedit gnome-text-editor vim nano
/usr/bin/pacman -S --noconfirm --needed zip unzip curl wget
/usr/bin/pacman -S --noconfirm --needed make gcc
/usr/bin/pacman -S --noconfirm --needed autoconf net-tools inetutils man
/usr/bin/pacman -S --noconfirm --needed cronie
/usr/bin/pacman -S --noconfirm --needed openssh
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm xfce4-terminal'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm adduser'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm gnome-shell-extension-installer'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm vscodium-bin'
touch $chkfile; fi

# Cloud
chkfile=/opt/vrk/.inst-dsktp-6
if [ ! -f "$chkfile" ]; then
echo "
#######
Cloud
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed openvpn
/usr/bin/pacman -S --noconfirm --needed filezilla
/usr/bin/pacman -S --noconfirm --needed nextcloud-client
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm dropbox'
touch $chkfile; fi

# Comm & VOIP
chkfile=/opt/vrk/.inst-dsktp-7
if [ ! -f "$chkfile" ]; then
echo "
#######
Comm & VOIP
#######
"
sleep 1
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm discord'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm skypeforlinux-stable-bin'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm twinkle'
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm zoom'
touch $chkfile; fi

# Media
chkfile=/opt/vrk/.inst-dsktp-8
if [ ! -f "$chkfile" ]; then
echo "
#######
Media
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed rhythmbox
/usr/bin/pacman -S --noconfirm --needed kid3
/usr/bin/pacman -S --noconfirm --needed vlc
/usr/bin/su worker -c '/usr/bin/yay -S --noconfirm spotify'
## Fix Spotify bugs:
pamac -S --noconfirm xd -desktop-portal-gtk
touch $chkfile; fi

# Disk Tools
chkfile=/opt/vrk/.inst-dsktp-9
if [ ! -f "$chkfile" ]; then
echo "
#######
Disk Tools
#######
"
sleep 1
/usr/bin/pacman -S --noconfirm --needed gparted
touch $chkfile; fi

# Remove every $chkfile
rm /opt/vrk/.inst-dsktp-*

# Set configs
if [ "${VRK_DESKTOP_INSTALLED}" != "YES" ]; then
sed -i "s/VRK_DESKTOP_INSTALLED=.*/VRK_DESKTOP_INSTALLED=\"YES\"/" /opt/vrk/machineinfo; fi
if [ -z "${VRK_DESKTOP_INSTALLED}" ]; then
echo "VRK_DESKTOP_INSTALLED=\"YES\"" >> /opt/vrk/machineinfo; fi
touch /opt/vrk/.vrk-desktop-installed

# Cleanup
/usr/bin/pacman -Rsc --noconfirm
/usr/bin/pacman -Scc --noconfirm
/usr/bin/su worker -c '/usr/bin/yay -Scc --noconfirm'
/usr/bin/su worker -c '/usr/bin/yay -Yc --noconfirm'

# Path
export PATH=$PATH:/opt/vrk/surf:/opt/vrk/droids/ALL:/opt/vrk/droids/$USER

# Finish
echo "Vrk Desktop is all set."
